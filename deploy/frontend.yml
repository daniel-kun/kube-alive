apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  namespace: kube-alive
  name: pod-read
rules:
- apiGroups: [""]
  resources: ["pods"]
  verbs: ["get", "watch", "list"]
---
apiVersion: v1
kind: ServiceAccount
metadata:
  namespace: kube-alive
  name: frontend-service-account
automountServiceAccountToken: true
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  namespace: kube-alive
  name: frontend-can-read-pods
subjects:
- kind: User
  name: frontend-service-account
  namespace: kube-alive
  apiGroup: rbac.authorization.k8s.io
- kind: ServiceAccount
  namespace: kube-alive
  name: frontend-service-account
roleRef:
  kind: Role
  name: pod-read
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: apps/v1beta2
kind: Deployment
metadata:
  name: frontend-deployment
  namespace: kube-alive
  labels:
    app: frontend
spec:
  replicas: 1
  selector:
    matchLabels:
      app: frontend
  template:
    metadata:
      labels:
        app: frontend
    spec:
      serviceAccountName: frontend-service-account
      containers:
      - name: frontend
        imagePullPolicy: Always
        image: %%KUBEALIVE_DOCKER_REPO%%/frontend%%BRANCH_SUFFIX%%%%ARCHSUFFIX%%
        ports:
        - containerPort: 80
---
kind: Service
apiVersion: v1
metadata:
  namespace: kube-alive
  name: frontend
spec:
  selector:
    app: frontend
  externalIPs:
  - %%KUBEALIVE_PUBLICIP%%
  ports:
  - name: http
    protocol: TCP
    port: 80
    targetPort: 80
